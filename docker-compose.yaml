services:
  server:
    image: ${APIRO_BE_REPO}:${APIRO_BE_IMAGEID}
#    ports:
#      - ${APIRO_REST_PORT}:80
#      - ${APIRO_WS_PORT}:81
    working_dir: /workdir
    volumes:
      - ./apiro-workdir:/apirowork
      - ./apiro-output:/apiro-output
      - ./apiro-input:/apiro-input
      - ./apiro-conf/maven:/maven
      - ./mongo-data:/mongdat
    deploy:
      resources:
        limits:
#          cpus: '2.0'
          memory: ${SERVER_MEM}
    env_file:
      - apiro-${SUBFILE}properties.env
    environment:
      APIRO_SYS_SECRET: knlfdafpjiu49q3tuhuhfa98uryu8twhaiehf8twiufahp849rhwafewr43wrfwe
      APIRO_JWT_SECRET: sdfgdfgsdfkgji5j09yt45gktrspogk0e9090gk0w9se0erfdogk490095635465
      APIRO_HAZELMEMBER: server
      APIRO_HAZELSMARTROUTE: false
      APIRO_ALWAYSMASTER: true
      SPRING_DATA_MONGODB_URI: mongodb://mongo/apiro
      SPRING_PROFILES_ACTIVE: compose
      APIRO_ADMINUSER: admin
      APIRO_ADMINKEYSECRET: "93718395736384984363"
      APIRO_INSTANCEID: APIRO_PRE_DEMO
      APIRO_DECIMALS: 8
      SERVER_PORT: 80
      APIRO_WORKDIR: /apirowork
      MAVEN_HOME: /maven
      WEBDRIVER_URL: "http://selenchrome:4444/wd/hub"
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      LC_CTYPE: en_US.UTF-8
    entrypoint: [ "sh", "-c", "while [ ! -f /mongdat/RSMARKER ]; do echo waiting for mongo; sleep 2; done; java --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.math=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED $JVM_OPTS1 $JVM_OPTS2 $JVM_OPTS3 $JVM_OPTS4 $JVM_OPTS5 -XX:+UseZGC -XX:+ZGenerational -jar /app/app.jar" ]
  frontend:
    image: ${APIRO_FE_REPO}:${APIRO_FE_IMAGEID}
    restart: always
    ports:
      - ${APIRO_SRV_PORT}:90
    links:
      - server:server
    volumes:
      - ./apiro-conf/nginx/apiro.conf:/etc/nginx/conf.d/apiro.conf
    deploy:
      resources:
        limits:
#          cpus: '1.0'
          memory: 100M
    environment:
      BASE_PORT: ${APIRO_SRV_PORT}
    entrypoint: [ "sh", "-c", "echo STARTING UP NGINX WITH BASE REST PORT $APIRO_SRV_PORT; echo $APIRO_SRV_PORT > /usr/share/nginx/html/assets/assets/misc/apiold.txt; echo KICKING OFF ENTRYPOINT; nginx -g 'daemon off;'" ]
  mongo:
    image: mongo:7
    restart: always
    ports:
      - ${APIRO_MONGO_PORT}:27017
    volumes:
      - ./mongo-data:/data/db
    deploy:
      resources:
        limits:
#          cpus: '2.0'
          memory: 1000M
    logging:
      driver: none
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--setParameter", "transactionLifetimeLimitSeconds=360"]
  mongoinit:
    image: mongo:7
    restart: on-failure:1
    volumes:
      - ./mongo-data:/md
    logging:
      driver: none
    deploy:
      resources:
        limits:
#          cpus: '0.1'
          memory: 100M
    entrypoint: [ "sh", "-c", "test -f /explode.sh && /explode.sh; until mongosh --host mongo -eval 'print(\"waiting for connection\")'; do sleep 2; echo waiting for mongo; done;  if [ ! -f /md/RSMARKER ]; then echo INITIALIZING REPLSET!!!!!!; mongosh --host mongo --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo\" }]})'; fi; touch /md/RSMARKER"]
  selenchrome:
    image: selenium/standalone-chrome:latest
    platform: linux/amd64
    restart: on-failure:1

